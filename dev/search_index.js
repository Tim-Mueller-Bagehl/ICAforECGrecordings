var documenterSearchIndex = {"docs":
[{"location":"#ICAforECGrecordings","page":"Home","title":"ICAforECGrecordings","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ICAforECGrecordings.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#ICAforECGrecordings.cumulant_matrices-Tuple{AbstractMatrix, Number}","page":"Home","title":"ICAforECGrecordings.cumulant_matrices","text":"cumulant_matrices(X::AbstractMatrix)\n\nBlind separation of real signals with SHIBBS.\n\nArguments\n\nX::Matrix{Float64}: Matrix that contains the signals that have to be unmixed. \n\nReturns  CM=cumulant_matrices(X) a NxN*nbcm cumulant matrix.\n\n\n\n\n\n","category":"method"},{"location":"#ICAforECGrecordings.jade","page":"Home","title":"ICAforECGrecordings.jade","text":"jade(data::Matrix{Float64}, m::Int = size(data,2)-1) -> Matrix{Float64}\n\nPerforms blind source separation on already-whitened data using the JADE algorithm.\n\nArguments\n\ndata: A Tx(n+1) matrix where:\ndata[:,1] is the time vector (length T).\ndata[:,2:end] are n observed, whitened signals.\nm: Number of independent components to extract (default = 2).\n\nReturns\n\nM1::Matrix{Float64}: Tx2 matrix where\ncolumn 1 is time\ncolumn 2 is the first separated source signal\nM2::Matrix{Float64}: Tx2 matrix where\ncolumn 1 is time\ncolumn 2 is the second separated source signal\n\n\n\n\n\n","category":"function"},{"location":"#ICAforECGrecordings.joint_diagonalization-Tuple{AbstractMatrix, Real, Number}","page":"Home","title":"ICAforECGrecordings.joint_diagonalization","text":"joint_diagonalization(CM::AbstractMatrix, threshhold::Real)\n\nBlind separation of real signals with SHIBBS.\n\nArguments\n\nCM::AbstractMatrix: Matrix that contains the signals that have to be unmixed. \n\n-threshhold::Real: A threshhold for the for the rotation  Returns  V = joint_diagonalization(CM, threshhold) a NxN diagonalized matrix.\n\n\n\n\n\n","category":"method"},{"location":"#ICAforECGrecordings.load_example_data-Tuple{}","page":"Home","title":"ICAforECGrecordings.load_example_data","text":"load_example_data()\n\nLoad example data from a .dat file for testing purposes. Returns a matrix containing the data.\n\n\n\n\n\n","category":"method"},{"location":"#ICAforECGrecordings.plot_dataset-Tuple{AbstractMatrix{Float64}}","page":"Home","title":"ICAforECGrecordings.plot_dataset","text":"plot_dataset(data::AbstractMatrix{Float64})\n\nPlot a dataset with time on the x-axis and multiple signals on the y-axis.\n\nArguments\n\ndata::AbstractMatrix{Float64}: Matrix where the first column represents time and the remaining columns represent different signals.\n\n\n\n\n\n","category":"method"},{"location":"#ICAforECGrecordings.read_dataset_from_dat-Tuple{String}","page":"Home","title":"ICAforECGrecordings.read_dataset_from_dat","text":"read_dataset_from_dat(Path :: String)\n\nReads .dat File from a File Location.  returns 9x2497 Matrix {Float64} with our dataset\n\n\n\n\n\n","category":"method"},{"location":"#ICAforECGrecordings.shibbs","page":"Home","title":"ICAforECGrecordings.shibbs","text":"shibbs(X::AbstractMatrix,m::Int)\n\nBlind separation of real signals with SHIBBS.\n\nArguments\n\nX::AbstractMatrix:  Matrix that contains the signals that have to be unmixed. \nm=nothing: amount of signals that should be extracted from X. default same amount of singals as source\n\nReturns  B=shibbsR(X) a mxn separating matrix such that S=B*X is an mxT matrix of estimated source signals.\n\n\n\n\n\n","category":"function"},{"location":"#ICAforECGrecordings.whiten-Tuple{AbstractMatrix{Float64}}","page":"Home","title":"ICAforECGrecordings.whiten","text":"whiten(data::AbstractMatrix{Float64}) -> AbstractMatrix{Float64}\n\nPerforms whitening on the given data matrix.\n\nWhitening transforms the input signals so that each signal has unit variance and all signals are uncorrelated. This is a common preprocessing step before applying Independent Component Analysis (ICA).\n\nArguments\n\ndata: A matrix of size (nsamples, nsignals) where each column is a signal.\n\nReturns\n\nA matrix of the same size as data, where the first column is time and the remaining columns are the whitened signals.\n\n\n\n\n\n","category":"method"}]
}
